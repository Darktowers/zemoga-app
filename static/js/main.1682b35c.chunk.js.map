{"version":3,"sources":["components/footer/footer.tsx","components/menu/menu.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Footer","className","target","href","icon","faFacebook","faTwitter","to","Menu","useState","openMenu","setOpenMenu","open","onClick","faBars","faTimes","faSearch","NotFound","React","lazy","Home","How","Login","Search","Trial","App","path","exact","fallback","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4TAuCeA,EAjCA,WACb,OAAO,oCACL,4BAAQC,UAAU,UAChB,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,iBACb,wCACA,uBAAGC,OAAO,SAASC,KAAK,6BACtB,kBAAC,IAAD,CAAiBC,KAAMC,OAEzB,uBAAGH,OAAO,SAASC,KAAK,wBACtB,kBAAC,IAAD,CAAiBC,KAAME,QAG3B,yBAAKL,UAAU,qBACb,wBAAIA,UAAU,wBACZ,wBAAIA,UAAU,6BACZ,kBAAC,IAAD,CAAMM,GAAG,SAASN,UAAU,iCAA5B,yBAEF,wBAAIA,UAAU,6BACZ,kBAAC,IAAD,CAAMM,GAAG,WAAWN,UAAU,iCAA9B,mBAEF,wBAAIA,UAAU,6BACZ,kBAAC,IAAD,CAAMM,GAAG,cAAcN,UAAU,iCAAjC,qB,uBCkBCO,EAvCF,WAAO,IAAD,EACeC,oBAAS,GADxB,mBACVC,EADU,KACAC,EADA,KAEXC,EAAO,WACXD,GAAaD,IAEf,OAAO,oCACL,4BAAQT,UAAU,UAChB,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,eACb,kBAAC,IAAD,CAAMM,GAAG,KACP,0BAAMN,UAAU,oBAAhB,oBAGJ,yBAAKA,UAAU,cAAcY,QAASD,GACpC,kBAAC,IAAD,CAAiBR,KAAMU,OAEzB,yBAAKb,UAAS,4BAAuBS,EAAW,OAAS,KACvD,yBAAKT,UAAU,QAAQY,QAASD,GAAhC,IAAuC,kBAAC,IAAD,CAAiBR,KAAMW,OAC9D,wBAAId,UAAU,uBAAuBY,QAASD,GAC5C,wBAAIX,UAAU,6BACZ,kBAAC,IAAD,CAAMM,GAAG,UAAUN,UAAU,iCAA7B,gBAEF,wBAAIA,UAAU,6BACZ,kBAAC,IAAD,CAAMM,GAAG,gBAAgBN,UAAU,iCAAnC,iBAEF,wBAAIA,UAAU,6BACZ,kBAAC,IAAD,CAAMM,GAAG,SAASN,UAAU,iCAA5B,mBAEF,wBAAIA,UAAU,6BACZ,kBAAC,IAAD,CAAMM,GAAG,UAAUN,UAAU,iCAAgC,kCAAO,kBAAC,IAAD,CAAiBG,KAAMY,MAA9B,aC9BrEC,EAAWC,IAAMC,MAAK,kBAAM,gCAC5BC,EAAOF,IAAMC,MAAK,kBAAM,gCACxBE,EAAMH,IAAMC,MAAK,kBAAM,gCACvBG,EAAQJ,IAAMC,MAAK,kBAAM,gCACzBI,EAASL,IAAMC,MAAK,kBAAM,gCAC1BK,EAAQN,IAAMC,MAAK,kBAAM,gCAyChBM,EAvCO,kBACpB,oCACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,GACnB,kBAAC,WAAD,CAAUC,SAAU,4CAClB,kBAACR,EAAD,QAGJ,kBAAC,IAAD,CAAOM,KAAK,gBAAgBC,OAAK,GAC/B,kBAAC,WAAD,CAAUC,SAAU,4CAClB,kBAACP,EAAD,QAGJ,kBAAC,IAAD,CAAOK,KAAK,SAASC,OAAK,GACxB,kBAAC,WAAD,CAAUC,SAAU,4CAClB,kBAACN,EAAD,QAGJ,kBAAC,IAAD,CAAOI,KAAK,UAAUC,OAAK,GACzB,kBAAC,WAAD,CAAUC,SAAU,4CAClB,kBAACL,EAAD,QAGJ,kBAAC,IAAD,CAAOG,KAAK,UAAUC,OAAK,GACzB,kBAAC,WAAD,CAAUC,SAAU,4CAClB,kBAACJ,EAAD,QAGJ,kBAAC,IAAD,CAAOE,KAAK,KACV,kBAAC,WAAD,CAAUE,SAAU,4CAClB,kBAACX,EAAD,SAKN,kBAAC,EAAD,QCrCgBY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,SAINC,SAASC,eAAe,SD2HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.1682b35c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./footer.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFacebook, faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Footer = () => {\r\n  return <>\r\n    <footer className=\"footer\">\r\n      <div className=\"footer-container\">\r\n        <div className=\"footer-social\">\r\n          <p>Follow Us</p>\r\n          <a target=\"_blanc\" href=\"https://www.facebook.com/\">\r\n            <FontAwesomeIcon icon={faFacebook} /> \r\n          </a>\r\n          <a target=\"_blanc\" href=\"https://twitter.com/\">\r\n            <FontAwesomeIcon icon={faTwitter} /> \r\n          </a>\r\n        </div>\r\n        <nav className=\"footer-navigation\">\r\n          <ul className=\"footer-navigation-ul\">\r\n            <li className=\"footer-navigation-ul-item\">\r\n              <Link to=\"/terms\" className=\"footer-navigation-ul-item-url\">Terms and conditions</Link>\r\n            </li>\r\n            <li className=\"footer-navigation-ul-item\">\r\n              <Link to=\"/privacy\" className=\"footer-navigation-ul-item-url\">Privacy Policy</Link>\r\n            </li>\r\n            <li className=\"footer-navigation-ul-item\">\r\n              <Link to=\"/contact-us\" className=\"footer-navigation-ul-item-url\">Contact Us</Link>\r\n            </li>\r\n\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </footer>\r\n\r\n  </>\r\n};\r\n\r\nexport default Footer\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./menu.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch, faBars, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst Menu = () => {\r\n  const [openMenu, setOpenMenu] = useState(false);\r\n  const open = () => {\r\n    setOpenMenu(!openMenu);\r\n  }\r\n  return <>\r\n    <header className=\"header\">\r\n      <div className=\"header-container\">\r\n        <div className=\"header-logo\">\r\n          <Link to=\"/\">\r\n            <span className=\"header-logo-span\">Rule of Thumb.</span>\r\n          </Link>\r\n        </div>\r\n        <div className=\"header-open\" onClick={open}>\r\n          <FontAwesomeIcon icon={faBars} />\r\n        </div>\r\n        <div className={`header-navigation ${openMenu ? 'open' : ''}`} >\r\n          <div className=\"close\" onClick={open}> <FontAwesomeIcon icon={faTimes} /></div>\r\n          <ul className=\"header-navigation-ul\" onClick={open}>\r\n            <li className=\"header-navigation-ul-item\">\r\n              <Link to=\"/trials\" className=\"header-navigation-ul-item-url\">Past Trials</Link>\r\n            </li>\r\n            <li className=\"header-navigation-ul-item\">\r\n              <Link to=\"/how-it-works\" className=\"header-navigation-ul-item-url\">How it works</Link>\r\n            </li>\r\n            <li className=\"header-navigation-ul-item\">\r\n              <Link to=\"/login\" className=\"header-navigation-ul-item-url\">Log In/Sign Up</Link>\r\n            </li>\r\n            <li className=\"header-navigation-ul-item\">\r\n              <Link to=\"/search\" className=\"header-navigation-ul-item-url\"><span> <FontAwesomeIcon icon={faSearch} /> </span></Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </header>\r\n\r\n  </>\r\n};\r\n\r\nexport default Menu\r\n","import React, { Suspense } from \"react\";\nimport \"./App.scss\";\nimport { Route, Switch } from \"react-router\";\nimport Footer from \"./components/footer/footer\";\nimport Menu from \"./components/menu/menu\";\n\nconst NotFound = React.lazy(() => import('./pages/error/error'));\nconst Home = React.lazy(() => import('./pages/home/home'));\nconst How = React.lazy(() => import('./pages/how/how'));\nconst Login = React.lazy(() => import('./pages/login/login'));\nconst Search = React.lazy(() => import('./pages/search/search'));\nconst Trial = React.lazy(() => import('./pages/trial/trial'));\n\nconst App: React.FC = () => (\n  <>\n    <Menu />\n    <Switch>\n      <Route path=\"/\" exact >\n        <Suspense fallback={<div>Loading...</div>}>\n          <Home />\n        </Suspense>\n      </Route>\n      <Route path=\"/how-it-works\" exact >\n        <Suspense fallback={<div>Loading...</div>}>\n          <How />\n        </Suspense>\n      </Route>\n      <Route path=\"/login\" exact >\n        <Suspense fallback={<div>Loading...</div>}>\n          <Login />\n        </Suspense>\n      </Route>\n      <Route path=\"/search\" exact >\n        <Suspense fallback={<div>Loading...</div>}>\n          <Search />\n        </Suspense>\n      </Route>\n      <Route path=\"/trials\" exact >\n        <Suspense fallback={<div>Loading...</div>}>\n          <Trial />\n        </Suspense>\n      </Route>\n      <Route path=\"*\">\n        <Suspense fallback={<div>Loading...</div>}>\n          <NotFound />\n        </Suspense>\n      </Route>\n    </Switch>\n\n    <Footer />\n  </>\n);\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { HelmetProvider } from 'react-helmet-async';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HelmetProvider>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </HelmetProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}